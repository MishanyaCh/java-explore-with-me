CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(250),
    email VARCHAR(254)
);

CREATE TABLE IF NOT EXISTS categories (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) UNIQUE
);

CREATE TABLE IF NOT EXISTS locations (
     id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
     latitude FLOAT,
     longitude FLOAT
);

CREATE TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(120),
    short_description VARCHAR(2000),
    full_description VARCHAR(7000),
    event_date TIMESTAMP WITHOUT TIME ZONE,
    creation_date TIMESTAMP WITHOUT TIME ZONE,
    state VARCHAR(15),
    paid BOOLEAN,
    request_moderation BOOLEAN,
    participant_limit INTEGER,
    publication_date TIMESTAMP WITHOUT TIME ZONE,
    confirmed_requests INTEGER,
    views INTEGER,
    category_id INTEGER,
    location_id INTEGER,
    creator_id INTEGER,

    CONSTRAINT events_category_fk FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE,
    CONSTRAINT events_location_fk FOREIGN KEY (location_id) REFERENCES locations (id) ON DELETE CASCADE,
    CONSTRAINT events_creator_fk FOREIGN KEY (creator_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS participation_requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    status VARCHAR(15),
    creation_date TIMESTAMP WITHOUT TIME ZONE,
    event_id BIGINT,
    requester_id INTEGER,

    CONSTRAINT requests_event_fk FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT requests_requester_fk FOREIGN KEY (requester_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(50),
    pinned BOOLEAN
);

CREATE TABLE IF NOT EXISTS compilations_events (
    compilation_id BIGINT,
    event_id BIGINT,

    CONSTRAINT compilation_id_fk FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON DELETE CASCADE,
    CONSTRAINT event_id_fk FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE
);